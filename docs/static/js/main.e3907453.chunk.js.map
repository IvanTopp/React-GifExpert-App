{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC3BqB,KAAK,GACLa,SAAS,IAJuB,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OATAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OAAEH,EAAS,CACjBf,KAAMkB,EACNL,SAAS,SAElB,CAACpB,IAGGqB,EDd0BK,CAAa1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEhBnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAACT,GAAD,OAAY,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCXjF8B,IAASC,OAAQ,kBACb,EADa,MAEbC,SAASC,eAAe,U","file":"static/js/main.e3907453.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats=>[inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=lzJHT70WWLtZL2DW6ParWvVu8d5lzwvE`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }));\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            \r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img)=>(\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n            data:[],\r\n            loading: true,\r\n        }\r\n    );\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>setstate({\r\n                data: imgs,\r\n                loading: false\r\n            }));\r\n    }, [category]);\r\n    \r\n\r\n    return state;\r\n};\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return ( \r\n        <>\r\n            <h2> GifExpertApp </h2> \r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map((category)=><GifGrid key={category} category={category} />)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}